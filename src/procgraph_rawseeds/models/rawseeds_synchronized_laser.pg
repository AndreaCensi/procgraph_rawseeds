--- model rawseeds_synchronized_laser
""" This model reads and synchronizes the 4 laser sources in a Rawseeds log. 

    The data is joined in one long 1D array.
    The order in which they are joined is: ``hokuyo_front``, ``hokuyo_rear``, 
    ``sick_front``, ``sick_rear``.
    
    The Hokuyo data is downsampled with :ref:`block:select`.
    All data is limited to 10fps using :ref:`block:fps_data_limit`.
    
"""
config logdir                 "Rawseeds log directory containing HOKUYO_FRONT.csv.bz2, etc."
config fps = 12               "Frequency limit on the data. Raw Hokuyo is 10, Sick is 76. (set 12 to get full 10hz) "
config hokuyo_downsample = 4  "Downsampling for Hokuyo (resolution is 676/1024 rays). "
# output y                      "Synchronized data. Order: HF,HR,SF,SR"

import procgraph_rawseeds

hokuyo_front.file = "${logdir}/HOKUYO_FRONT.csv.bz2"
 hokuyo_rear.file = "${logdir}/HOKUYO_REAR.csv.bz2"
  sick_front.file = "${logdir}/SICK_FRONT.csv.bz2"
   sick_rear.file = "${logdir}/SICK_REAR.csv.bz2"
   
|hokuyo_front:RawseedsHokuyo| --> |fps_data_limit fps=$fps| --> |select every=$hokuyo_downsample| --> hokuyo_front
| hokuyo_rear:RawseedsHokuyo| --> |fps_data_limit fps=$fps| --> |select every=$hokuyo_downsample| --> hokuyo_rear 
|  sick_front:RawseedsRF|     --> |fps_data_limit fps=$fps| --> sick_front 
|   sick_rear:RawseedsRF|     --> |fps_data_limit fps=$fps| --> sick_rear


hokuyo_front, hokuyo_rear, sick_front, sick_rear --> |sync| --> |join| --> y

y --> |output name=y|
 

--- model rawseeds_synchronized_laser_test
''' Creates a display of the data output by :ref:`block:rawseeds_synchronized_laser`.'''
config logdir 'Rawseeds log directory.'

|rawseeds_synchronized_laser logdir=$logdir| --> y 

y --> |rawseeds_synchronized_laser_plot| -->  rgb

 rgb --> |mencoder file="${logdir}/out/synchronized_laser_test/rgb.avi"|


--- model rawseeds_synchronized_laser_plot
''' Displays the stream coming from :ref:`block:rawseeds_synchronized_laser`. 

    It assumes that ``hokuyo_downsample == 4``.
    
'''
config width = 320 'Width of each display.'
config height = 320 'Height of each display.'
# input y 'Data produced by :ref:`block:rawseeds_synchronized_laser`.'
# output rgb 'RGB image with the two plots side by side'

|input name=y| --> y

y --> |  display_sick:laser_display width=$width height=$height| --> rgb1
y --> |display_hokuyo:laser_display width=$width height=$height| --> rgb2

rgb1,rgb2 --> |sync| --> |grid| --> |output name=out|

# sick is 181, hokuyo/4 = 171, y has 704 readings in total
display_hokuyo.groups = [{ indices: [0,170], theta: [-1.92,+1.92], color: 'r', origin: [0,0,0],  max_readings: 5}, { indices: [171,341], theta: [+1.22,+5.06], color: 'b', origin: [0,0,0], max_readings: 5}]
display_sick.groups = [{ indices: [342,522], theta: [-1.57,+1.57], color: 'r', origin: [0,0,0]}, { indices: [523,703], theta: [+1.57,+4.71], color: 'b', origin: [0,0,0]}]





